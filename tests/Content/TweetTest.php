<?php

namespace FeedMeTwitterOpenAPI\Tests\Content;

use FeedMeTwitterOpenAPI\Content\Tweet;
use OpenAPI\Client\Api\TweetsApi;
use OpenAPI\Client\Api\UsersApi;
use OpenAPI\Client\Configuration;
use OpenAPI\Client\Model\Error;
use OpenAPI\Client\Model\Get2TweetsSearchRecentResponse;
use PHPUnit\Framework\TestCase;

final class TweetTest extends TestCase
{
	private static $BEARER_TOKEN;

	public static function setUpBeforeClass(): void
	{
		parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
		self::$BEARER_TOKEN = file_get_contents('/run/secrets/bearer_token');
	}


	public function testIntegration(): void
	{
		$clientConfig = Configuration::getDefaultConfiguration()->setAccessToken(self::$BEARER_TOKEN);
		$tweetsApi = new TweetsApi(null, $clientConfig);
		$response = $tweetsApi->tweetsRecentSearch('from:TwitterDev');
		switch (get_class($response)) {
			case Error::class:
				throw new \RuntimeException($response->getMessage());
			case Get2TweetsSearchRecentResponse::class:
				$openApiTweets = $response->getData() ?? [];
				$includes = $response->getIncludes();

				$tweets = [];
				foreach ($openApiTweets as $openApiTweet) {
					$tweets[] = Tweet::fromTweet($openApiTweet, $includes);
				}
				$this->assertSameSize($openApiTweets, $tweets);
				break;
			default:
				throw new \RuntimeException('Unknown class: ' . get_class($response));
		}
	}
}
